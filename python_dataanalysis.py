# -*- coding: utf-8 -*-
"""Python_DataAnalysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AgvcOahyx-YQL-cJP1mPf1f1A-BoaWWo
"""

from google.colab import files
uploaded = files.upload()

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

#Downloaded and used-Sample Sales Data Denormalize Sales Data : Segmentation, Clustering, Shipping, etc. by Gus Segura from kaggle
df = pd.read_csv("sales_data_sample.csv", encoding="ISO-8859-1")

#Inspecting dataset
print(df.shape) # Should output (2823, 25) according to datacard on kaggle
print(df.columns)

# 2. Cleaning Data
df['ORDERDATE'] = pd.to_datetime(df['ORDERDATE'], errors='coerce')
df.dropna(subset=['ORDERDATE'], inplace=True)
df['year'] = df['ORDERDATE'].dt.year
df['month'] = df['ORDERDATE'].dt.month

#Checking cleaned data
print(df.columns)

# Impute or drop missing: example for STATE and POSTALCODE

df['STATE'] = df['STATE'].fillna('Unknown')

df.dropna(subset=['POSTALCODE'], inplace=True)

# 3. Visualizations Using Matplotlib and Seaborn
plt.figure(figsize=(10,6))
sales_by_product = df.groupby('PRODUCTLINE')['SALES'].sum().sort_values(ascending=False)
sns.barplot(x=sales_by_product.index, y=sales_by_product.values)
plt.xticks(rotation=45)
plt.title('Total Sales by Product Line')
plt.ylabel('Sales')
plt.tight_layout()
plt.show()

df['DEALSIZE'].value_counts().plot.pie(autopct='%1.1f%%', figsize=(6,6), title='Deal Size Distribution')
plt.ylabel('')
plt.show()

# 4. Pivot Table Example
pivot = pd.pivot_table(df, values='SALES', index='COUNTRY', columns='PRODUCTLINE', aggfunc='sum', fill_value=0)
print(pivot.head())